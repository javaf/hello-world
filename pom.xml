<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <!-- Define Package -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>io.github.javaf</groupId>
  <artifactId>hello-world</artifactId>
  <version>1.0.30</version>
  <packaging>jar</packaging>
  
  <!-- Use JDK 11 -->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
  </properties>
  
  <!-- Provide Details -->
  <name>hello-world</name>
  <description>
    A "Hello, World!" in an intorductory computer program that general displays
    "Hello, World!".
  </description>
  <url>https://github.com/javaf/hello-world</url>
  
  <licenses>
    <license>
      <name>MIT License</name>
      <url>https://opensource.org/licenses/MIT</url>
    </license>
  </licenses>
  
  <developers>
    <developer>
      <id>wolfram77</id>
      <name>Subhajit Sahu</name>
      <email>wolfram77@gmail.com</email>
      <url>https://github.com/wolfram77</url>
    </developer>
  </developers>
  
  <scm>
    <url>git@github.com:javaf/hello-world.git</url>
    <connection>scm:git:git@github.com:javaf/hello-world.git</connection>
    <developerConnection>scm:git:git@github.com:javaf/hello-world.git</developerConnection>
  </scm>



  <!-- GitHub Packages -->
  <distributionManagement>
    <repository>
      <id>github</id>
      <url>https://maven.pkg.github.com/javaf/hello-world</url>
    </repository>
  </distributionManagement>



  <!-- Deploy to GitHub Packages (default) -->
  <!-- $ mvn clean deploy -->
  <build>
    <plugins>
      <!-- Generate .sources.jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Generate .javadoc.jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>attach-javadoc</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Sign with GPG -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>verify</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Publish javadoc to gh-pages -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-scm-publish-plugin</artifactId>
        <version>1.1</version>
        <configuration>
          <content>${project.build.directory}/apidocs</content>
          <checkoutDirectory>${project.build.directory}/scmpublish</checkoutDirectory>
          <checkinComment>Publishing javadoc for ${project.artifactId}:${project.version}</checkinComment>
          <skipDeletedFiles>true</skipDeletedFiles>
          <pubScmUrl>scm:git:git@github.com:javaf/hello-world.git</pubScmUrl>
          <scmBranch>gh-pages</scmBranch>
        </configuration>
        <executions>
          <execution>
            <id>publish-javadoc</id>
            <phase>deploy</phase>
            <goals>
              <goal>publish-scm</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>



  <profiles>
    <!-- Deploy to Maven Central Repository -->
    <!-- $ mvn clean deploy -Dossrh -->
    <profile>
      <id>ossrh</id>
      <activation>
        <property>
          <name>ossrh</name>
        </property>
      </activation>
      
      <!-- Maven Central Repository -->
      <distributionManagement>
        <snapshotRepository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </snapshotRepository>
        <repository>
          <id>ossrh</id>
          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
      </distributionManagement>
      
      <build>
        <plugins>
          <!-- Deploy to Maven Central Repository -->
          <plugin>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>nexus-staging-maven-plugin</artifactId>
            <version>1.6.7</version>
            <extensions>true</extensions>
            <configuration>
              <serverId>ossrh</serverId>
              <nexusUrl>https://oss.sonatype.org/</nexusUrl>
              <keepStagingRepositoryOnFailure>true</keepStagingRepositoryOnFailure>
              <autoReleaseAfterClose>true</autoReleaseAfterClose>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
    
    <!-- Deploy to GitHub Packages & create Release -->
    <!-- $ mvn clean deploy -Drelease -->
    <profile>
      <id>release</id>
      <activation>
        <property>
          <name>release</name>
        </property>
      </activation>
      
      <!-- GitHub Release plugin source -->
      <pluginRepositories>
        <pluginRepository>
          <id>bintray-cy6ergn0m-maven</id>
          <name>bintray-plugins</name>
          <url>http://dl.bintray.com/cy6ergn0m/maven</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>

      <build>
        <plugins>
          <!-- Create new release -->
          <plugin>
            <groupId>cy.github</groupId>
            <artifactId>github-release-plugin</artifactId>
            <version>0.5.1</version>
            <executions>
              <execution>
                <goals>
                  <goal>gh-upload</goal>
                </goals>
                <phase>deploy</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>



  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>5.6.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>5.6.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>5.6.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
</project>
